@model IEnumerable<PJCAdmin.Models.Routine>

@{
ViewBag.Title = "Job - Routine Version Selection";
}

@if (Roles.IsUserInRole("Administrator") && !(ViewData["mockUser"] as string).Equals(""))
{
    <h1>
        Viewing as: @(ViewData["mockUser"] as string)
    </h1>
    <p>@Html.ActionLink("View as Different User","Index")</p>

    <hr />
}

<h2>
    Viewing Routine: @(ViewData["routineName"] as string) - Assigned to: @(ViewData["assigneeName"] as string)
</h2>

<p>
    @if (Roles.IsUserInRole("Administrator")){
        @Html.ActionLink("View Different Routine", "ListRoutines", new { mockUser = ViewData["mockUser"] as string })
    }
    else{
        @Html.ActionLink("View Different Routine", "ListRoutines")
    }
</p>

<br/>

<table>
    <tr>
        <th>Select the desired Routine version...</th>
    </tr>

    @foreach (PJCAdmin.Models.Routine routine in Model)
    {
        <tr>
            <td>
                Updated on: @Html.DisplayFor(modelItem => routine.updatedDate) 
            </td>
            <td>
                @if (Roles.IsUserInRole("Administrator"))
                {
                    @Html.ActionLink("Show Jobs", "ListJobs", new { 
                        mockUser = ViewData["mockUser"] as string,
                        routineName = routine.routineTitle,
                        assigneeName = routine.assigneeUserName,
                        updatedDate = routine.updatedDate})
                }
                else
                {
                    @Html.ActionLink("Show Jobs", "ListJobs", new {
                        routineName = routine.routineTitle,
                        assigneeName = routine.assigneeUserName,
                        updatedDate = routine.updatedDate})
                }
            </td>
        </tr>
    }
</table>