@model PJCAdmin.Models.Job

@{
    ViewBag.Title = "Job - Details";
}

@if (Roles.IsUserInRole("Administrator") && !(ViewData["mockUser"] as string).Equals(""))
{
    <h1>
        Viewing as: @(ViewData["mockUser"] as string)
    </h1>
    <p>@Html.ActionLink("View as Different User","Index")</p>

    <hr/>
}

<h2>Job Title - @Html.DisplayFor(modelItem => Model.Routine.routineTitle)</h2>

<p>
    @if (Roles.IsUserInRole("Administrator")){
        @Html.ActionLink("View Different Routine", "ListRoutines", new { mockUser = ViewData["mockUser"] as string })
        <span>|</span>
        @Html.ActionLink("View Different Version", "ListRoutineVersions", new{
            mockUser = ViewData["mockUser"] as string,
            routineName = ViewData["routineName"] as string,
            assigneeName = ViewData["assigneeName"] as string})
        <span>|</span>
        @Html.ActionLink("Delete Job", "Delete", new{
            mockUser = ViewData["mockUser"] as string,
            routineName = Model.Routine.routineTitle,
            assigneeName = Model.Routine.assigneeUserName,
            startDate = Model.startTime})
    }
    else {
        @Html.ActionLink("View Different Routine", "ListRoutines")

        @Html.ActionLink("View Different Version", "ListRoutineVersions", new{
            routineName = ViewData["routineName"] as string,
            assigneeName = ViewData["assigneeName"] as string})

        @Html.ActionLink("Delete Job", "Delete", new{
            routineName = Model.Routine.routineTitle,
            assigneeName = Model.Routine.assigneeUserName,
            startDate = Model.startTime})
    }
</p>

<table>
    @if (Model.Notes.Count > 0)
    {
        <tr>
            <td>
                @Html.ActionLink("View Notes", "List", "Note", new { user = Model.Routine.assigneeUserName },null)
            </td>
        </tr>
    }
    <tr><th>Overview</th></tr>
    <tr><td>Assigned to:</td><td> @Html.DisplayFor(modelItem => Model.Routine.assigneeUserName)</td></tr>
    <tr>
        <td>User Access:</td>
        <td>
            @if (Model.Routine.isDisabled){ @("Disabled") }
            else { @("Enabled") }
        </td>
    </tr>
    <tr>
        <td>Timed:</td>
        <td> 
            @if (Model.Routine.isTimed){ @("Yes") }
            else { @("No") }
        </td>
    </tr>
    <tr><td>Started at:</td><td> @Html.DisplayFor(modelItem => Model.startTime)</td></tr>
    <tr><td>Ended at:</td><td> @Html.DisplayFor(modelItem => Model.Steps.Last().endTime)</td></tr>
    <tr>
        <td>Expected Duration:</td>
        <td>
            @if (Model.Routine.expectedDuration != null) { @Html.DisplayFor(modelItem => Model.Routine.expectedDuration) }
            else { @("None") }
        </td>
    </tr>
    <tr><td>Completed in:</td><td> @(Model.Steps.Last().endTime - Model.startTime)</td></tr>
    <tr><td><br/></td></tr>
    <tr><th>Steps</th></tr>

    @foreach (PJCAdmin.Models.Step step in Model.Steps)
    {
        PJCAdmin.Models.Task task = Model.Routine.Tasks.Where(t => t.sequenceNo == step.sequenceNo).First();
        
        DateTime? stepStartTime;
        if (step.sequenceNo == 1)
        {
            stepStartTime = Model.startTime;
        }
        else
        {
            stepStartTime = Model.Steps.Where(s => s.sequenceNo == (byte)(step.sequenceNo - 1)).First().endTime;
        }
        <tr>
            <td><strong>@Html.DisplayFor(modelItem => task.sequenceNo). @Html.DisplayFor(modelItem => task.taskName)</strong></td>
        </tr>
        <tr>
            <td>Description:</td><td> @Html.DisplayFor(modelItem => task.taskDescription)</td>
        </tr>
        <tr>
            <td>Timed:</td>
            <td>
                @if (task.isTimed) { @("Yes") }
                else { @("No") }
            </td>
        </tr>
        <tr><td>Started at:</td><td> @Html.DisplayFor(modelItem => stepStartTime)</td></tr>
        <tr><td>Completed at:</td><td> @Html.DisplayFor(modelItem => step.endTime)</td></tr>
        <tr>
            <td>Expected Duration:</td>
            <td>
                @if (task.expectedDuration != null) { @Html.DisplayFor(modelItem => task.expectedDuration) }
                else { @("None") }
            </td>
        </tr>
        <tr>
            <td>Completed in:</td><td> @(step.endTime - stepStartTime)</td>
        </tr>
        if (step.Notes.Count() > 0)
        {
        <tr>
            <td>
               @Html.ActionLink("View Notes", "List", "Note", new { user = Model.Routine.assigneeUserName },null)
            </td>
        </tr>
        }
        <tr><td><br/></td></tr>
    }
</table>